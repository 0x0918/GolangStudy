要理解 k8s 对象，需要从以下几个方面来学习。
首先要知道什么是 k8s 对象。
在 k8s 系统中，k8s 对象是持久化的实体。k8s 使用这些实体去表示整个集群的状态。
k8s 对象描述了以下信息：
1、哪些容器化应用正在运行（以及在哪些节点上运行）。
2、可以被应用使用的资源。
3、关于应用运行时表现的策略，比如重启策略、升级策略以及容错策略。
其次，需要了解 k8s 的目标性记录特性。
k8s 对象是"目标性记录"，一旦创建该对象，k8s 系统将不断工作以确保该对象存在。
然后，需要了解 k8s 集群的期望状态。
通过创建对象，你就是在告知 k8s 系统，你想要的集群工作负载状态看起来应是什么样子的，这就是 k8s 集群所谓的期望状态（Desired State）。
接着，便是如何操作 k8s 对象。
无论是创建、修改或者删除，都需要使用 k8s 诶批哎。比如，当使用 kubectl 命令行接口（CLI）时，CLI 会调用必要的 k8s 诶批哎；也可以在程序中使用客户端库，来直接调用 k8s 诶批哎。这些 诶批哎 在实际开发部署过程中，会逐渐学习到，常用的便是 apply（创建容器），get pod（查询容器） 等命令。
然后，我们需要了解对象规约（Spec）与状态（Status）。
必须在创建对象时设置 spec，描述你希望对象所具有的特征：期望状态（Desired State）。
status 描述了对象的当前状态（Current State），它是由 k8s 系统和组件设置并更新的。
spec 和 status 之间的联系是，在任何时刻，k8s 控制平面都一直都在积极地管理着对象的实际状态，以使之达成期望状态。
比较重要的是，需要学习如何描述 k8s 对象。
创建 k8s 对象时，必须提供对象的 spec，用来描述该对象的期望状态，以及关于对象的一些基本信息（例如名称）。
这里有一个 .yaml 示例文件，展示了如何用 k8s 部署 nginx。
最后，我们需要了解编写 yaml 所必须填写的字段。
k8s yaml 需要配置的字段如下：
1、诶批哎 Version：创建该对象所使用的 k8s 诶批哎 的版本。
2、kind：想要创建的对象的类别。
3、metadata：帮助唯一标识对象的一些数据，包括一个 name 字符串、UID 和可选的 namespace
4、spec：你所期望的该对象的状态
最后，我们通过思维导图整体回顾下 k8s 对象。