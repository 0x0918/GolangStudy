1
00:00:00,766 --> 00:00:02,966
k8s概述主要分为三块

2
00:00:02,966 --> 00:00:04,833
1是了解什么是k8s

3
00:00:04,833 --> 00:00:07,533
2是回顾下程序部署历史

4
00:00:07,733 --> 00:00:11,133
3是了解下k8s能够提供的能力

5
00:00:11,133 --> 00:00:15,166
简单来说，k8s 是一个可移植、可扩展的开源平台

6
00:00:15,400 --> 00:00:18,433
用于管理容器化的工作负载和服务

7
00:00:18,666 --> 00:00:21,166
可促进声明式配置和自动化

8
00:00:21,633 --> 00:00:26,300
同时，k8s 拥有一个庞大且快速增长的生态系统

9
00:00:26,533 --> 00:00:30,300
其服务、支持和工具的使用范围广泛

10
00:00:30,933 --> 00:00:34,133
部署方式的历史，我们可以看一张图

11
00:00:34,266 --> 00:00:35,066
可以看到

12
00:00:35,066 --> 00:00:36,700
在传统部署时代

13
00:00:36,833 --> 00:00:39,500
服务在物理服务器上面直接运行

14
00:00:39,733 --> 00:00:41,200
在虚拟化时代

15
00:00:41,433 --> 00:00:43,700
物理服务器创建了多个虚拟机

16
00:00:43,833 --> 00:00:46,000
从而实现更好的可伸缩性

17
00:00:46,166 --> 00:00:47,766
降低硬件成本

18
00:00:47,933 --> 00:00:51,333
在容器化部署时代，容器类似于VM

19
00:00:51,333 --> 00:00:53,266
但是放宽了隔离属性

20
00:00:53,500 --> 00:00:56,666
可以使得应用程序之间共享操作系统

21
00:00:57,000 --> 00:00:59,766
最后，我们来了解下k8s的能力

22
00:00:59,833 --> 00:01:02,400
主要有6点，可以简单的过一下

23
00:01:02,500 --> 00:01:06,500
在后面的学习中会详细介绍每个能力：

24
00:01:06,500 --> 00:01:09,033
1、服务发现和负载均衡

25
00:01:09,366 --> 00:01:13,733
使用过consul和nginx的同学应该比较好理解

26
00:01:14,200 --> 00:01:19,566
2、存储编排，k8s允许应用程序挂载到存储系统

27
00:01:20,266 --> 00:01:27,966
3、自动部署和回滚，k8s可以将应用程序按照所需的状态进行自动部署

28
00:01:28,333 --> 00:01:34,800
4、自动完成装箱计算，k8s允许每个容器指定所需的资源

29
00:01:35,133 --> 00:01:38,266
同时由k8s来进行管理

30
00:01:38,266 --> 00:01:42,266
5、自我修复，k8s自动重启失败的容器

31
00:01:42,366 --> 00:01:43,300
替换容器

32
00:01:43,500 --> 00:01:45,000
以及杀死容器

33
00:01:45,533 --> 00:01:51,333
6、密钥与配置管理，k8s允许存储和管理敏感信息

