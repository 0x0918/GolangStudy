k8s 组件主要分为3块。
1 是控制平面组件。
2 是 Node 组件，也叫做节点组件。
3 是插件。
首先来看下，一个完整的 k8s 集群部署完成后，所形成的结构图，这张图可以对照着后面的组件介绍进行反复回顾，可以加深对 k8s 集群的理解。
然后，我们学习下 k8s 控制平面组件。
控制平面组件用来为 k8s 集群做出全局决策，比如资源的调度，以及检测和响应集群事件。控制平面组件可以理解是 k8s 集群的大脑。
第一个控制平面组件是 kube-apiserver，该组件负责公开了 k8s 接口，负责处理接受请求的工作。api-server 是 k8s 控制平面的前端。
第二个控制平面组件是 etcd，etcd 是兼顾一致性与高可用性的键值数据库，可以保存集群数据。
第三个控制平面组件是 kube-scheduler，负责监视新创建的、未指定运行节点的 Pods，并选择节点来让 Pod 在上面运行。
第四个控制平面组件是 kube-controller-manager，负责运行控制器进程，控制器包括：
1、节点控制器 Node Controller：负责在节点出现故障时进行通知和响应
2、任务控制器 Job Controller：监测代表一次性任务的 Job 对象，然后创建 Pods 来运行这些任务直至完成
3、端点控制器 Endpoints Controller：填充端点 Endpoints 对象（即加入 Service 与 Pod）
4、服务帐户和令牌控制器 Service Account and Token Controllers：为新的命名空间创建默认帐户和 API 访问令牌
第五个控制平面组件是 cloud-controller-manager，用于将集群嵌入特定云（例如亚马逊的 aws，微软的 azure 等），允许你将你的集群连接到云提供商的 API 之上，并将与该云平台交互的组件同与你的集群交互的组件分离开来。
接着，我们学习下 Node 组件。
Node 组件会在每个节点上运行，负责维护运行的 Pod 并提供 Kubernetes 运行环境。可以理解是k8s集群的打工人，用于实际运行客户的服务。
第一个 k8s 打工人是 kubelet，kubelet 会在集群中每个节点上运行。它保证容器都运行在 Pod 中。
第二个 k8s 打工人是 kube-proxy，它是集群中每个节点上运行的网络代理，是实现 k8s 服务 Service 概念的一部分。在后面的学习中，会学习到有关 Service 的概念。
第三个 k8s 打工人是容器运行时 Container Runtime，它是负责运行容器的软件。可以支持许多容器运行环境，例如 Docker、containerd、容器运行环境接口 Kubernetes CRI 的其他任何实现。
最后，我们来了解下插件。
插件使用 Kubernetes 资源 DaemonSet、 Deployment 等，来实现集群功能。因为这些插件提供集群级别的功能，插件中命名空间域的资源属于 kube-system 命名空间。
有几种常用的插件，例如 DNS，仪表盘，容器资源监控，集群层面日志等。这些插件都可以按需部署，也可以根据需求自行开发k8s插件。